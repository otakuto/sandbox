name: Build

on: [push, pull_request]

jobs:
  Windows:
    runs-on: windows-2019
    steps:
      - name: main
        run: |
          ls "C:\Program Files (x86)\Microsoft Visual Studio\2019\VC\" -R
          #call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat" -vcvars_ver=14.2
          choco install sccache
          echo $env:LOCALAPPDATA
          cl
          lib
          #tasklist
          #netstat -ano
          #choco install ngrok.portable
          #Start-Process powershell -Verb runAs
          #Invoke-WebRequest 'https://github.com/PowerShell/Win32-OpenSSH/releases/download/v8.1.0.0p1-Beta/OpenSSH-Win64.zip' -O OpenSSH-Win64.zip
          #Expand-Archive -Path OpenSSH-Win64.zip -DestinationPath 'C:/Program Files'
          #cd 'C:/Program Files/OpenSSH-Win64'
          #powershell.exe -ExecutionPolicy Bypass -File install-sshd.ps1
          #New-NetFirewallRule -Name sshd -DisplayName 'OpenSSH SSH Server' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22
          #sshd -p 22
          #choco install bitvise-ssh-server -params '"/InstallLocation=C:\temp"'
          #netstat -ano
          #ssh -T -o "StrictHostKeyChecking no" ssh.localhost.run
          #Start-Process -NoNewWindow python -m http.server
          #wget localhost:8000
          #Start-Process -NoNewWindow ssh -T -R 80:localhost:8000 ssh.localhost.run
          #netstat -ano
          #Start-Sleep -s 600
          #Start-Service sshd
          #npm install -g localtunnel
          #lt --port 8000
          #dism /online /get-features
          #dism /online /get-capabilities
          #dism /online /Add-Capability /CapabilityName:OpenSSH.Client~~~~0.0.1.0
          #dism /online /Add-Capability /CapabilityName:OpenSSH.Server~~~~0.0.1.0
          #Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0
          #Get-WindowsCapability -Online
          #Get-WindowsCapability -Online | ? Name -like 'OpenSSH*'
